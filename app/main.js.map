{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* jshint esnext: true */\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nimport util from './util';\r\nimport notifications from './notifications';\r\nimport loadingStates from './loadingStates';\r\n\r\nimport AFAFile from 'afa-file';\r\n\r\nimport audioAnalyzer from 'web-audio-analyser';\r\n\r\nconst $fileInput = $(\"input#upload\"),\r\n    $destLabel = $(\"span#destLabel\"),\r\n    $interface = $(\"#interface\"),\r\n    $trackList = $(\"#track-list\");\r\n\r\nvar trackListTable = new MaterialDataTable($trackList.get(0));\r\n\r\n//\r\n\r\nconst noop = () => {};\r\n\r\n// \r\n\r\nimport FileList from './fileList';\r\n\r\nconst fileList = new FileList(trackListTable);\r\n\r\n\r\nimport FilePickerDialog from './filePickerDialog';\r\n\r\nconst destPicker = new FilePickerDialog();\r\n\r\n//\r\n\r\nimport ipc from 'ipc';\r\n$(\"#exit-button\").click(() => {\r\n    ipc.sendSync(\"window\", \"close\");\r\n});\r\n\r\n//\r\n\r\nvar working = false;\r\n\r\n//\r\n\r\n$(\"body\")\r\n    .on('drop', (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        var droppedFiles = e.originalEvent.dataTransfer.files;\r\n\r\n        if (!working) handleFiles(droppedFiles[0] ? droppedFiles : e.target.files);\r\n    })\r\n    .on('dragover', (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!working) e.originalEvent.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\r\n    });\r\n\r\n$(\"#interface, div#upload-button, #interface #blank-state-text\").click(() => {\r\n    $fileInput.click();\r\n});\r\n\r\n$(\"#chooseDestButton\").click(() => {\r\n    promptDestPicker();\r\n});\r\n\r\n$(\"#interface #track-list\").click(util.stopPropagation);\r\n\r\n//\r\n\r\n$(\".mdl-menu.main, .mdl-menu.main *\").click(util.stopPropagation);\r\n\r\n\r\nfunction handleFileInputChange() {\r\n    handleFiles($(this).get(0).files);\r\n}\r\n\r\n\r\nconst maxConcurrentCtxs = 1;\r\n\r\nfunction handleProcessButtonClick() {\r\n\r\n    var process = function process(files) {\r\n\r\n        // process the first batch of files\r\n\r\n        var numProcessed = 0,\r\n            firstFiles = util.sliceObj(files, 0, maxConcurrentCtxs),\r\n            nextFile;\r\n\r\n        var beforeEachTrack = function beforeEachTrack() {\r\n            numProcessed++;\r\n        };\r\n\r\n        processFiles(firstFiles, beforeEachTrack, function oneTrackCompleted() {\r\n            // for every track completed, process the next one on the queue and have `processFiles` call back\r\n            // to this function after that track has completed\r\n            nextFile = util.sliceObj(files, numProcessed, numProcessed + 1);\r\n            if (nextFile !== {}) {\r\n                processFiles(nextFile, beforeEachTrack, oneTrackCompleted);\r\n            } else {\r\n                $(\"#stop-button\").hide();\r\n            }\r\n        });\r\n    };\r\n\r\n    var start = function start() {\r\n        working = true;\r\n        $interface.addClass('working');\r\n\r\n        // hide #process-button, show #stop-button\r\n        $(\"#process-button\").hide();\r\n        $(\"#stop-button\").show();\r\n\r\n        process(fileList.files);\r\n    }\r\n\r\n    if (!destPicker.paths[0]) {\r\n        var path = promptDestPicker();\r\n        if (path !== undefined && path.length > 0) {\r\n            start();\r\n        } else notifications.err(\"Error: No destination directory was provided. [Try Again]\");\r\n    } else {\r\n        start();\r\n    }\r\n}\r\n\r\nvar $pointsPerSecond = $(\"input[type=range]#pointsPerSecond\"),\r\n    $pointsPerSecondCounter = $(\"span#pointsPerSecondCounter > span.inner\");\r\n\r\nfunction handlePointsPerSecondRangeChange(e) {\r\n    var val = $(this).val();\r\n    // make sure the slider never reaches zero\r\n    // Note: the range input shouldn't have min=100 instead because the visual minimum should be 0\r\n    if (parseInt(val) === 0) {\r\n        if (e) e.preventDefault();\r\n        $(this).val(100);\r\n        handlePointsPerSecondRangeChange();\r\n    } else {\r\n        $pointsPerSecondCounter.text(val);\r\n    }\r\n}\r\nhandlePointsPerSecondRangeChange.apply($pointsPerSecond);\r\n\r\nfunction promptDestPicker() {\r\n    var path = destPicker.pick()[0];\r\n    if (path) $destLabel.text(path);\r\n    return path;\r\n}\r\n\r\n\r\n$(\"input[type=file]#upload\").change(handleFileInputChange);\r\n$pointsPerSecond.on(\"change input\", handlePointsPerSecondRangeChange.bind($pointsPerSecond));\r\n$(\"#process-button\").click(handleProcessButtonClick);\r\n\r\nwindow.loops = [];\r\n$(\"#stop-button\").click(() => {\r\n    // clear all loops\r\n    window.loops.forEach(clearInterval);\r\n\r\n    // remove all progress bars\r\n    var files = fileList.files,\r\n        $entry;\r\n    for (let tmpFilePath in files) {\r\n        $entry = files[tmpFilePath].entry;\r\n        $entry.find(\".mdl-progress\").remove();\r\n    }\r\n\r\n    // // show #process-button again\r\n    // $(\"#process-button\").show();\r\n    $(\"#stop-button\").hide();\r\n});\r\n\r\n//\r\n\r\nvar invalidFileFormatMsg = \"Invalid file format (currently, only .wav and .mp3 files are supported)\";\r\n\r\nfunction handleFiles(files) {\r\n    var filePaths = [];\r\n\r\n    [].slice.call(files).forEach((file) => {\r\n        if (!/\\.(?:wav|mp3)$/i.test(path.basename(file.name))) {\r\n            console.error(\"ERR: \" + invalidFileFormatMsg);\r\n            notifications.err(invalidFileFormatMsg);\r\n        } else {\r\n            filePaths.push(file.path);\r\n        }\r\n    });\r\n\r\n    util.resetInput($fileInput);\r\n\r\n    if (filePaths[0]) {\r\n        prepareFiles(filePaths)\r\n            .then(() => {\r\n                // update interface\r\n                $interface.removeClass(\"blank\");\r\n                $(\"#interface, div#upload-button, #interface #blank-state-text\").off(\"click\");\r\n            })\r\n            // errors are already handled in try..catch\r\n            .catch((err) => {\r\n                // console.log(err);\r\n            });\r\n    }\r\n}\r\n\r\nasync function prepareFiles(filePaths) {\r\n    try {\r\n        let tmpFilePaths = await util.tmp.copyFilesToTmp(filePaths);\r\n        // display files (automatically registers `filePath`'s and `entry`'s')\r\n        await * tmpFilePaths.map(fileList.displayFile.bind(fileList));\r\n        return;\r\n    } catch (err) {\r\n        util.handleError(err);\r\n    }\r\n}\r\n\r\nfunction processFiles(files, beforeEachTrack, oneTrackCompleted) {\r\n    // set configuration variables to the values of the options' corresponding inputs in the interface\r\n    var gzip = $(\"input#gzip\").is(\":checked\"),\r\n        pointsPerSecond = parseInt($pointsPerSecond.val()),\r\n        dest = destPicker.paths[0];\r\n\r\n    var file,\r\n        trackLength;\r\n\r\n    for (let tmpFilePath in files) {\r\n        file = files[tmpFilePath];\r\n\r\n        var $entry = file.entry;\r\n\r\n        // skip over unchecked tracks\r\n        if (!$entry.hasClass(\"is-selected\")) continue;\r\n\r\n        var progressBar = loadingStates.createProgressBar( /*\"indeterminate\"*/ ),\r\n            $progressBar = $(progressBar.element_);\r\n\r\n        $entry.append($progressBar);\r\n        $progressBar = util.withRefs($progressBar); // reattach references\r\n\r\n        $progressBar.addClass(\"analysis-progress\");\r\n\r\n        trackLength = file.trackLength;\r\n\r\n        var progressOpts = {\r\n            analysis: {\r\n                start() {\r\n                    // $progressBar.removeClass(\"mdl-progress__indeterminate\");\r\n                    this.$progressBar.addClass(\"current\");\r\n\r\n                    // disable checkbox, update through MDL\r\n                    this.$entry.find('> td.label > .mdl-checkbox input[type=checkbox]').prop(\"disabled\", true)\r\n                        .parent().get(0).MaterialCheckbox.checkDisabled();\r\n                },\r\n                set(progress) {\r\n                    this.progressBar.setProgress(progress * 100);\r\n                },\r\n                error() {\r\n                    this.$progressBar.addClass(\"errored\");\r\n                },\r\n                complete() {\r\n                    this.$progressBar.removeClass(\"current\");\r\n                }\r\n            },\r\n            save: {\r\n                start() {\r\n                    this.$progressBar.fadeOut(100);\r\n\r\n                    this.progressBar.setProgress(0);\r\n                    this.$progressBar.addClass(\"saving\");\r\n                    \r\n                    this.$progressBar.fadeIn(100);\r\n                },\r\n                set(progress) {\r\n                    this.progressBar.setProgress(progress * 100);\r\n                },\r\n                error() {\r\n                    this.$progressBar.addClass(\"errored\");\r\n                },\r\n                complete() {\r\n                    // remove progress bar\r\n                    this.$progressBar.remove();\r\n\r\n                    // replace checkbox with a \"done\" icon (check mark)\r\n                    var $icon = $(\"<i/>\").addClass(\"icon material-icons\").text(\"done\");\r\n                    this.$entry.find('> td.label > .mdl-checkbox').remove()\r\n                        .parent().append($icon);\r\n\r\n                    this.$progressBar.removeClass(\"current\");\r\n                    this.oneTrackCompleted();\r\n                }\r\n            }\r\n            \r\n        };\r\n\r\n        // bind each function with a context that provides reference to the current state of each of the\r\n        // relevant variables, as these variables will be overwritten in the next iteration of our^ for..in loop\r\n        \r\n        let analysisOpts = progressOpts.analysis; // cache\r\n        for (let method in analysisOpts) {\r\n            analysisOpts[method] = analysisOpts[method].bind({\r\n                progressBar, $progressBar, $entry\r\n            });\r\n        }\r\n\r\n        let saveOpts = progressOpts.save; // cache\r\n        for (let method in saveOpts) {\r\n            saveOpts[method] = saveOpts[method].bind({\r\n                progressBar, $progressBar, $entry, oneTrackCompleted\r\n            });\r\n        }\r\n\r\n        // numProcessed++ so that when any track completes, the next available analysis will not process this one\r\n        beforeEachTrack();\r\n\r\n        analyzeAudioTrack({\r\n                filePath: tmpFilePath,\r\n                pointsPerSecond,\r\n                trackLength,\r\n                progressBar: analysisOpts\r\n            })\r\n            .then((results) => {\r\n                saveDataToFile({\r\n                        analysis: results.analysis,\r\n                        sourcePath: results.sourcePath,\r\n                        gzip,\r\n                        progressBar: saveOpts\r\n                    })\r\n                    .then(() => {\r\n                        console.log(\"successfully saved .afa file for %c%s\", \"font-weight: 600; font-size: 1.2em;\", path.basename(tmpFilePath));\r\n                    }).catch((err) => {\r\n                        util.handleError(err);\r\n                    });\r\n            })\r\n            .catch((err) => {\r\n                err.notify = true;\r\n                err.args = [tmpFilePath];\r\n                util.handleError(err);\r\n            });\r\n    }\r\n}\r\n\r\nfunction analyzeAudioTrack({\r\n    filePath, pointsPerSecond, trackLength, progressBar = {\r\n        start: noop,\r\n        set: noop,\r\n        error: noop,\r\n        complete: noop\r\n    }\r\n}) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        var audio = new Audio();\r\n        // configure `audio`\r\n        audio.autoplay = false;\r\n        audio.preload = \"auto\";\r\n        audio.src = filePath;\r\n\r\n        var analyzer = audioAnalyzer(audio, util.analyzerOptions);\r\n        analyzer.analyser.smoothingTimeConstant = 0.3;\r\n\r\n        var frequencies,\r\n            freqBinCount = analyzer.analyser.frequencyBinCount,\r\n            afaData = [];\r\n\r\n        var speed = 1 / pointsPerSecond;\r\n\r\n        var analysisLoop, progressLoop;\r\n\r\n        // although the audio file will not be \"played\" regularly, this event will still be\r\n        // triggered when `audio.currentTime` is set to a value >= `audio.duration` in `analysisLoop`\r\n        audio.addEventListener(\"ended\", () => {\r\n            // end analysis loop\r\n            clearInterval(analysisLoop);\r\n\r\n            console.log(\"successfully created .afa file for %c%s\", \"font-weight: 600; font-size: 1.2em;\", path.basename(filePath));\r\n\r\n            var results = {\r\n                analysis: {\r\n                    data: afaData,\r\n                    freqBinCount: freqBinCount // array of Uint8Array's\r\n                },\r\n                sourcePath: filePath\r\n            };\r\n\r\n            // clean up audio context\r\n            analyzer.ctx.close().then(() => {\r\n                // end progress loop\r\n                progressBar.complete();\r\n                clearInterval(progressLoop);\r\n\r\n                // end analysis loop\r\n                clearInterval(analysisLoop);\r\n\r\n                resolve(results);\r\n            });\r\n        });\r\n\r\n        audio.addEventListener(\"error\", (e) => {\r\n            var errorInfo = util.handleAudioLoadError(e);\r\n\r\n            // clean up audio context\r\n            analyzer.ctx.close().then(() => {\r\n                // end progress loop, analysis loop\r\n                clearInterval(progressLoop);\r\n                clearInterval(analysisLoop);\r\n\r\n                // convey error in progress bar\r\n                progressBar.error(errorInfo);\r\n                reject(errorInfo);\r\n            });\r\n        });\r\n\r\n        var progress = 0,\r\n            first = false;\r\n        audio.addEventListener(\"canplaythrough\", (e) => {\r\n            if (!first) {\r\n                first = true;\r\n\r\n                // remove indeterminate status from progress bar\r\n                progressBar.start();\r\n\r\n                // analyze the audio\r\n                console.log(\"analyzing %c%s\", \"font-weight: 600; font-size: 1.2em;\", path.basename(filePath));\r\n                analysisLoop = setInterval(() => {\r\n                    frequencies = new Uint8Array(util.normalize(analyzer.frequencies(), 0, 100));\r\n                    afaData.push(frequencies);\r\n\r\n                    progress = (audio.currentTime += speed) / trackLength;\r\n                }, 1);\r\n                window.loops.push(analysisLoop);\r\n\r\n                // update progress bar in a separate detached loop (async)\r\n                progressLoop = setInterval(() => {\r\n                    // update progress bar\r\n                    progressBar.set(progress);\r\n                }, 50);\r\n                window.loops.push(progressLoop);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction saveDataToFile({\r\n    analysis, sourcePath, gzip = false, progressBar = {\r\n        start: noop,\r\n        set: noop,\r\n        error: noop,\r\n        complete: noop\r\n    }\r\n}) {\r\n\r\n    var folder = destPicker.paths[0];\r\n    var dest = path.resolve(folder, path.basename(sourcePath)).replace(/\\.[a-zA-Z]*$/i, \".afa\");\r\n\r\n    progressBar.start();\r\n\r\n    var file = new AFAFile(analysis);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (dest === __dirname) {\r\n            return reject({\r\n                msg: \"Destination directory not set!\",\r\n                loc: \"saveDataToFile\",\r\n                notify: true\r\n            });\r\n        }\r\n\r\n        if (gzip === true) {\r\n            progressBar.set(33);\r\n            \r\n            dest += \".gz\";\r\n            file.toGzipped()\r\n                .then((gzipped) => {\r\n                    progressBar.set(66);\r\n                    // TODO: update progress of save bar as file is written\r\n                    fs.writeFile(dest, gzipped, \"utf8\", () => {\r\n                        progressBar.set(100);\r\n                        progressBar.complete();\r\n                        resolve();\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    progressBar.error();\r\n                    reject({\r\n                        err: err,\r\n                        msg: \"Error while gzipping file\",\r\n                        loc: \"AFAFile.prototype.toGzipped\",\r\n                        notify: true\r\n                    });\r\n                });\r\n        } else {\r\n            progressBar.set(50);\r\n            fs.writeFile(dest, gzipped, \"utf8\", () => {\r\n                progressBar.set(100);\r\n                progressBar.complete();\r\n                resolve();\r\n            });\r\n        }\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}