$red: rgb(255, 82, 82);
$offwhite: #fafafa;
$dark-grey-bg: #666;
$darker-grey-bg: #333;
$grey-accent: #bbb;
$grey-accent2: #aaa;

$theme-color: rgb(63,81,181);
$accent: rgb(255,110,64);

@import url(https://fonts.googleapis.com/css?family=Roboto:400,700,700italic,400italic|Roboto+Mono);
* {
    box-sizing: border-box;
}

html > body {
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif !important;
    /* -- */
    user-select: none;
}


/* --- */

header {
    background-color: #fafafa !important;
    color: #222 !important;
    -webkit-app-region: drag;
}

main {
    background-color: $dark-grey-bg;
    height: 100%;
}

nav {
    margin-right: 3em;
    > * {
        -webkit-app-region: no-drag;
    }
}


/* -- */

.u-no-pointer-events {
    pointer-events: none;
}


/* -- */

ul.mdl-menu.main > li {
    span[class*=__label] {
        bottom: 10px;
    }
    > div.mdl-slider__container {
        top: 16px;
    }
    #pointsPerSecondCounter {
        position: absolute;
        text-align: right;
        width: 100%;
        right: 0;
        padding-right: 1em;
        > span.inner {
            font-weight: 600;
        }
    }
    input#dest {
        display: none;
    }
    #chooseDestButton {
        > i.material-icons {
            &.open { visibility: visible; }
            &.filled { visibility: hidden; }
        }
    }
    &.filled > #chooseDestButton > i.material-icons {
        &.open { visibility: hidden; }
        &.filled { visibility: visible; }
    }
    #destLabel {
        position: absolute;
        display: inline;
        text-align: left;
        padding-left: 0.5em;
        padding-right: 1em;
        overflow: hidden;
        /* max-width: calc(100% - 2em); */
        /* clip-path: inset(0 2em 0 0); */

        > span {
            position: relative;
            right: 0;
            text-align: right;
            font-family: "Roboto Mono", monospace;
        }
    }
}


/* -- */

#exit-button {
    margin-left: -2em;
    margin-right: 2em;
    cursor: pointer;
    -webkit-app-region: no-drag;
    &:hover,
    &:active {
        color: $red;
        /*color: $offwhite*/
    }
}


/* -- */


/* prevent header from disappearing on screens < 1024px wide */

.mdl-layout__header {
    display: block !important;
}


/* --- */

.page-content {
    padding: 2em;
    height: calc(100% - 4em);
    /*color: $offwhite*/
}

input#upload {
    display: none;
}

#interface {
    width: 100%;
    height: 100%;
    > #track-list {
        width: 100%;
        margin-top: -2em;
        background-color: transparent;
        tr {
            transition: .1s color;
            &:not(.is-selected):not(:hover) {
                color: #ddd;
            }
        }
        > thead {
            display: none;
        }
        td.label {
            text-align: left;
        }
        .mdl-progress.analysis-progress {
            position: absolute auto 0 auto 0;
            transform: translateY(3.4em);
            width: 100%;

            &.errored > .bar {
                background-color: $red;
            }

            &.saving > .bar {
                background-color: $accent;
            }
        }
    }
    button.mdl-button.action-button {
        position: fixed auto 0.7em 0.7em auto;
        bottom: -100%;
        transition: .3s bottom ease-out;
    }
    
    button#stop-button {
        display: none;
    }
    div#banner {
        display: block;
        position: fixed auto auto 1em 1em;
        padding: 0.5em;
        padding-bottom: 27px;
        height: 1.4em;
        background-color: $darker-grey-bg; // FIXME
        border: 2px solid black;

        > span {
            color: $grey-accent;
            font-size: 0.8em;
            text-transform: uppercase;
        }

        bottom: -100%;
        transition: 0.3s bottom ease-out;
    }
    // blank state
    > .blank-state {
        color: $grey-accent2;
        opacity: 0;
        text-align: center;
        position: relative;
        top: 40%;
        /*transform: translateY(-50%);*/
        transition: .2s opacity;
        > #blank-state-text {
            font-size: 2em;
            cursor: context-menu;
        }
    }
    // if interface is blank,
    &.blank {
        border: 4px dashed $grey-accent;
        padding: 2em;
        
        // then show blank state,
        > .blank-state {
            opacity: 1;
        }
        // and hide track list
        > #track-list {
            display: none;
        }
    }
    // if interface is NOT blank, (if has tracks)
    &:not(.blank) {
        // and also done, ('done' = no tracks left to analyze)
        &.done {
            // then hide FAB below page
            > button.mdl-button.action-button {
                bottom: -100%;
            }
        }
        // but if interface is NOT blank and also NOT done, (if still tracks left to analyze)
        &:not(.done) {
            // then show FAB
            > button.mdl-button.action-button {
                bottom: 0.7em;
            }
        }
        // regardless of whether there are tracks left to analyze,
        // if the interface is also currently NOT working ('working' = analyzing tracks)
        &:not(.working) {
            // then show the banner
            // (program should be in a "ready" state for analysis, banner saying that new tracks can be dropped)
            div#banner {
                bottom: 1em;
            }
        }
    }
}


/* snackbars */

.snackbar.error {
    background-color: $red;
}
